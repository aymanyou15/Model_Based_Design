function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "calc"};
	this.sidHashMap["calc"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "calc:8"};
	this.sidHashMap["calc:8"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "calc:19"};
	this.sidHashMap["calc:19"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/In1"] = {sid: "calc:1"};
	this.sidHashMap["calc:1"] = {rtwname: "<Root>/In1"};
	this.rtwnameHashMap["<Root>/In2"] = {sid: "calc:2"};
	this.sidHashMap["calc:2"] = {rtwname: "<Root>/In2"};
	this.rtwnameHashMap["<Root>/Add"] = {sid: "calc:3"};
	this.sidHashMap["calc:3"] = {rtwname: "<Root>/Add"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "calc:23"};
	this.sidHashMap["calc:23"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/If"] = {sid: "calc:7"};
	this.sidHashMap["calc:7"] = {rtwname: "<Root>/If"};
	this.rtwnameHashMap["<Root>/If Action Subsystem"] = {sid: "calc:8"};
	this.sidHashMap["calc:8"] = {rtwname: "<Root>/If Action Subsystem"};
	this.rtwnameHashMap["<Root>/If Action Subsystem1"] = {sid: "calc:19"};
	this.sidHashMap["calc:19"] = {rtwname: "<Root>/If Action Subsystem1"};
	this.rtwnameHashMap["<Root>/Multiply"] = {sid: "calc:6"};
	this.sidHashMap["calc:6"] = {rtwname: "<Root>/Multiply"};
	this.rtwnameHashMap["<Root>/Subtract"] = {sid: "calc:4"};
	this.sidHashMap["calc:4"] = {rtwname: "<Root>/Subtract"};
	this.rtwnameHashMap["<Root>/Out1"] = {sid: "calc:14"};
	this.sidHashMap["calc:14"] = {rtwname: "<Root>/Out1"};
	this.rtwnameHashMap["<Root>/Out2"] = {sid: "calc:15"};
	this.sidHashMap["calc:15"] = {rtwname: "<Root>/Out2"};
	this.rtwnameHashMap["<Root>/Out3"] = {sid: "calc:16"};
	this.sidHashMap["calc:16"] = {rtwname: "<Root>/Out3"};
	this.rtwnameHashMap["<Root>/Out4"] = {sid: "calc:17"};
	this.sidHashMap["calc:17"] = {rtwname: "<Root>/Out4"};
	this.rtwnameHashMap["<Root>/division by zero"] = {sid: "calc:18"};
	this.sidHashMap["calc:18"] = {rtwname: "<Root>/division by zero"};
	this.rtwnameHashMap["<S1>/In1"] = {sid: "calc:9"};
	this.sidHashMap["calc:9"] = {rtwname: "<S1>/In1"};
	this.rtwnameHashMap["<S1>/In2"] = {sid: "calc:12"};
	this.sidHashMap["calc:12"] = {rtwname: "<S1>/In2"};
	this.rtwnameHashMap["<S1>/Action Port"] = {sid: "calc:10"};
	this.sidHashMap["calc:10"] = {rtwname: "<S1>/Action Port"};
	this.rtwnameHashMap["<S1>/Divide"] = {sid: "calc:13"};
	this.sidHashMap["calc:13"] = {rtwname: "<S1>/Divide"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "calc:11"};
	this.sidHashMap["calc:11"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S2>/In1"] = {sid: "calc:20"};
	this.sidHashMap["calc:20"] = {rtwname: "<S2>/In1"};
	this.rtwnameHashMap["<S2>/Action Port"] = {sid: "calc:21"};
	this.sidHashMap["calc:21"] = {rtwname: "<S2>/Action Port"};
	this.rtwnameHashMap["<S2>/Out1"] = {sid: "calc:22"};
	this.sidHashMap["calc:22"] = {rtwname: "<S2>/Out1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
